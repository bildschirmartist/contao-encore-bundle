/**
 * ATTENTION: This file has been auto-generated by the contao command "vendor/bin/contao-console encore:prepare".
 * Don't modify this file manually. For further information see vendor/heimrichhannot/contao-encore-bundle/README.md
 */

let Encore = require('@symfony/webpack-encore');

module.exports = {
    addEntries: function(skipEntries) {
        let bundles = module.exports.bundles,
            skipEntriesRegExp = new RegExp('--skip-entries=([^=]+)', 'i'),
            entriesRegExp = new RegExp('--entries=([^=]+)', 'i');

        // check for a command line parameter
        for (let i = 0; i < process.argv.length; i++)
        {
            let part = process.argv[i];

            if (entriesRegExp.test(part))
            {
                let cmdEntries = part.match(entriesRegExp);

                if (cmdEntries.length > 1)
                {
                    cmdEntries = cmdEntries[1].split(',');

                    if (cmdEntries.length > 0)
                    {
                        for (let j = 0; j < cmdEntries.length; j++)
                        {
                            if (typeof bundles[cmdEntries[j]] === 'undefined')
                            {
                                console.error('The entry "' + cmdEntries[j] + '" doesn\'t exist.');
                                return;
                            }
                        }

                        for (let name in bundles)
                        {
                            if (!bundles.hasOwnProperty(name) || (skipEntries instanceof Array && skipEntries.indexOf(name) > -1))
                            {
                                continue;
                            }

                            if (cmdEntries.indexOf(name) > -1)
                            {
                                module.exports.addEntry(name);
                            }
                            else
                            {
                                // add empty entry so that no error occurs with insertion in twig template "encore_css_imports.html.twig"
                                Encore.addEntry(name, './vendor/heimrichhannot/contao-encore-bundle/src/Resources/assets/js/encore.empty-entry.js');
                            }
                        }

                        return;
                    }
                }
            }

            if (skipEntriesRegExp.test(part))
            {
                let cmdEntries = part.match(skipEntriesRegExp);

                if (cmdEntries.length > 1)
                {
                    cmdEntries = cmdEntries[1].split(',');

                    if (cmdEntries.length > 0)
                    {
                        for (let j = 0; j < cmdEntries.length; j++)
                        {
                            if (typeof bundles[cmdEntries[j]] === 'undefined')
                            {
                                console.error('The entry "' + cmdEntries[j] + '" doesn\'t exist.');
                                return;
                            }
                        }

                        for (let name in bundles)
                        {
                            if (!bundles.hasOwnProperty(name) || (skipEntries instanceof Array && skipEntries.indexOf(name) > -1))
                            {
                                continue;
                            }

                            if (cmdEntries.indexOf(name) > -1)
                            {
                                // add empty entry so that no error occurs with insertion in twig template "encore_css_imports.html.twig"
                                Encore.addEntry(name, './vendor/heimrichhannot/contao-encore-bundle/src/Resources/assets/js/encore.empty-entry.js');
                            }
                            else
                            {
                                module.exports.addEntry(name);
                            }
                        }

                        return;
                    }
                }
            }
        }

        // no command line parameter has been found
        for (let name in bundles)
        {
            if (!bundles.hasOwnProperty(name) || (skipEntries instanceof Array && skipEntries.indexOf(name) > -1))
            {
                continue;
            }

            Encore.addEntry(name, bundles[name]);
        }
    },
    addEntry: function(name) {
        let bundles = module.exports.bundles;

        if (typeof bundles[name] === 'undefined')
        {
            console.error('The entry "' + name + '" doesn\'t exist.');
            return;
        }

        Encore.addEntry(name, bundles[name]);
    },
    bundles: {
{% for entry in entries %}
        '{{ entry.name|raw }}': '{{ entry.file|raw }}',
{% endfor %}
    }
};